import datetime


a={1,2,3,4}
b={1,4,5}
print(a,b,a-b)

a=datetime.date(2022,12,5)
c=datetime.datetime(2022,1,1,23,59)
d=datetime.datetime(2022,1,1,0,0)
b=datetime.timedelta(minutes=12)
print(a+b)
print(c-d,type(c-d))


td=datetime.timedelta(hours=25)
a=datetime.datetime(2022,1,1,0,0,1,0)
b=datetime.datetime(2022,1,2,0,0,1,0)
print(datetime.datetime.fromisoformat('2022-12-02').weekday())
print(datetime.datetime.fromisoformat('2022-11-24 03:04:00'))
print(b-a)
print(a-b)
print(a>b)
print(max([a,b]))
print(a+td)
print(sorted([a,a+td,b,b+td]))
print(a.weekday(),b.weekday())

import time
a=[1,1,1,1,1,1,1,1,1,1,1,1,1,1]
b=[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]

t=time.perf_counter()
c=a+b
print(c,time.perf_counter()-t)

t=time.perf_counter()
a.extend(b)
print(a,time.perf_counter()-t)

a=[1,1,1,1,1,1,1,1,1,1,1,1,1,1]
b=[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]

t=time.perf_counter()
for i in b:
    a.append(i)
print(a,time.perf_counter()-t)

a,b='20220626','20221127'
a=a[:4]+'-'+a[4:6]+'-'+a[6:]
b=b[:4]+'-'+b[4:6]+'-'+b[6:]


start_date = datetime.date.fromisoformat(a)
end_date = datetime.date.fromisoformat(b)
delta = datetime.timedelta(1)
while (start_date <= end_date):
    # print(start_date.strftime('%Y%m%d'), end=" ")
    start_date += delta


dotwlist=['monday','tuesday','wednesday','thursday','friday','saturday','sunday']



datetoservices=dict()
import os,datetime,sys,pandas as pd

temp=pd.read_csv('sf subway gtfs/stops.txt')
print(temp)
temp=pd.read_csv('sf subway gtfs/routes.txt')
print(temp)

system=sys.argv[1]
curdir=os.listdir(system+' subway gtfs')
if 'calendar.txt' in curdir: # nyc, also dont bother using calendar dates maybe
    calendar=pd.read_csv(system+' subway gtfs/calendar.txt')
    oneday=datetime.timedelta(1)
    for i in calendar.index:
        startd=str(calendar.loc[i,'start_date'])
        endd=str(calendar.loc[i,'end_date'])
        startdate=datetime.date.fromisoformat(startd[:4]+'-'+startd[4:6]+'-'+startd[6:])
        enddate=datetime.date.fromisoformat(endd[:4]+'-'+endd[4:6]+'-'+endd[6:])
        while (startdate <= enddate):
            if startdate not in datetoservices:
                datetoservices[startdate]=set()
            dotw=startdate.weekday()
            if calendar.loc[i,dotwlist[dotw]]==1:
                datetoservices[startdate].add(calendar.loc[i,'service_id'])
            startdate += oneday
cd=pd.read_csv(system+' subway gtfs/calendar_dates.txt')
for i in cd.index:
    serv=cd.loc[i,'service_id']
    dat=str(cd.loc[i,'date'])
    date=datetime.date.fromisoformat(dat[:4]+'-'+dat[4:6]+'-'+dat[6:])
    if date not in datetoservices:
        datetoservices[date]=set()
    if cd.loc[i,'exception_type']==1:
        datetoservices[date].add(serv)
    else:
        if serv in datetoservices:
            datetoservices[date].remove(serv)
# with open(system+' datetoservice.txt','w') as f:
#     f.write('\n'.join(sorted([' '.join((str(i),str(datetoservices[i]))) for i in datetoservices])))

allstatids={'A31', '224', 'A50', 'J13', '257', 'F31', 'D43', 'D39', 'G31', 'R25', 'J22', '116', 'G29', 'G22', 'F12', '602', 'R45', '617', '129', '103', 'D34', '226', '623', 'J27', 'M05', '902', 'B22', 'F32', 'G07', 'A24', 'R20', '136', 'G32', 'G05', '634', 'S04', 'A52', 'L15', 'A16', 'A33', 'D03', 'Q01', 'A09', 'Q04', 'L12', '209', '407', '406', 'D30', 'G28', 'R19', 'D40', 'A02', 'A18', 'B12', 'R04', '712', '639', 'F33', 'G14', '246', 'N10', '720', 'A21', 'B14', 'D06', '615', '237', 'F38', '408', 'F27', '119', '122', '710', 'G12', 'A30', 'D10', 'J28', 'R24', 'R31', 'A42', 'L29', 'R26', '630', 'G15', '410', '618', 'R01', '625', '607', 'F29', 'A28', 'R34', 'B15', '603', 'B19', 'G24', '624', 'G10', '901', '120', 'H08', 'M19', '133', '638', 'R28', 'D42', 'J20', '635', '212', '721', 'F21', 'H09', 'A54', 'M16', '247', '132', '211', 'M06', 'D21', 'G08', '106', 'R18', 'H03', 'B23', 'R03', '113', 'G18', 'D29', '220', '244', '249', 'F30', 'D17', 'M08', 'H07', 'J14', 'F22', 'F16', '239', '118', 'M21', 'A49', 'J21', '705', '233', 'F02', 'A14', '215', 'R41', '128', 'F35', '409', 'A41', '111', 'A11', 'M20', 'B13', 'R21', 'S01', 'R23', 'F04', 'D35', '719', 'J24', 'F03', 'F23', '234', 'J17', 'G36', 'R35', '205', 'B06', 'J31', 'L24', '225', '134', 'F01', 'L17', '414', 'N03', 'G30', 'L22', 'D11', 'D38', '130', 'A57', '114', 'A32', 'D16', 'D18', 'A45', '236', 'D41', '142', 'F24', 'A65', 'M13', '707', '711', 'M11', '208', 'A48', '125', 'A47', '108', 'D27', 'J30', 'D22', 'N07', 'B04', '242', 'G11', 'G35', 'A19', 'D33', '127', 'B08', 'H02', 'M23', 'F09', 'L19', '611', 'A64', '104', 'E01', '627', 'R40', 'D37', 'A40', '107', '217', '724', 'H15', '201', 'R39', '243', 'R17', 'L26', 'Q03', 'A05', '101', 'J15', '123', 'F36', 'D01', '504', 'A51', '612', '609', 'N06', '614', 'A44', 'R43', 'F34', '216', 'L02', 'F05', '138', '631', 'N02', '219', 'A07', 'R15', 'L03', 'F06', '709', '218', 'G19', '139', 'A38', 'H06', '256', '222', 'B16', '301', '613', 'H13', 'D19', 'D14', 'L20', '402', '401', 'R11', '505', '420', '302', 'R05', 'L11', 'A25', 'F14', '235', '228', '121', '109', 'G16', 'G13', 'S03', 'D05', 'A36', '251', '126', 'R27', '616', '419', '610', 'L13', '255', '214', '501', 'A34', '629', '413', 'M10', '640', 'A03', 'F39', 'M04', 'A43', 'M01', 'G33', '636', '632', 'F26', 'B10', 'N08', '210', 'F20', 'J16', 'G21', 'M14', 'R14', 'H14', '411', '713', 'A06', 'R44', '708', '601', 'M18', 'R08', '230', '241', 'J19', '232', 'F11', '135', 'G20', 'L21', 'B20', 'A20', '231', 'A60', '701', '718', 'L27', 'D12', 'R16', 'L10', 'H04', 'N09', 'M12', '621', '633', '418', 'L16', '213', '229', 'F25', 'L01', 'D24', '702', 'R30', '248', '606', 'F18', 'A22', '253', 'R29', '706', 'D08', 'H01', 'H10', '245', '502', '714', 'A53', '137', '405', 'A63', 'R22', '117', '112', 'L14', '238', '622', 'D28', 'A59', 'A61', 'D09', '723', '726', '716', 'H11', 'D31', 'B21', '415', '619', 'A15', 'R32', 'R33', 'G06', 'D04', '254', 'A12', 'J12', 'J29', 'R13', '637', '221', '423', 'G26', 'R06', 'M22', 'L25', 'L06', 'A46', 'R42', 'A17', '604', 'L08', 'J23', 'N04', 'G34', '412', '115', '204', 'M09', 'D26', '416', 'B17', '110', '252', 'N05', 'L05', '626', '628', '715', 'R36', 'H12', 'A10', '503', 'D15', '608', 'B18', 'A55', 'D25', 'F15', 'D07', '207', 'G09', '124', 'A27', 'L28', 'F07', '725', 'Q05', '206', '131', '250', '227', 'D32'}

stop=pd.read_csv(system+' subway gtfs/stops.txt')
stoptoname=dict()
for i in stop.index:
    stoptoname[stop.loc[i,'stop_id']]=stop.loc[i,'stop_name']

tr=pd.read_csv(system+' subway gtfs/transfers.txt')
unitrans=tr[(tr['from_stop_id']!=tr['to_stop_id']) & (tr['from_stop_id'].isin(allstatids)) & (tr['to_stop_id'].isin(allstatids))]
print(unitrans)
unitrans.to_csv(system+' transfers.txt',index=False)

transferrablegroups=[]
for i in set(unitrans['from_stop_id']):
    tfs=set(unitrans[unitrans['from_stop_id']==i]['to_stop_id'])
    tfs.add(i)
    tfs={(j,stoptoname[j]) for j in tfs}
    c=0
    for n,j in enumerate(transferrablegroups):
        if len(j.intersection(tfs))>0:
            transferrablegroups[n].update(tfs)
            c+=1
    if c==0:
        transferrablegroups.append(tfs)
    if c>1:
        print(tfs)
print(len(transferrablegroups), len(set(unitrans['from_stop_id'])), len(set(unitrans['to_stop_id'])))
print(transferrablegroups[:5])
with open(system+' transfergroups.txt','w') as f:
    temp=sorted((tuple(sorted(list({i[1] for i in sorted(list(j))}))),{i[0] for i in j}) for j in transferrablegroups)
    f.write('\n'.join([str(i) for i in temp]))
            

longstr="['A31', '224', 'A50', 'J13', '257', 'F31', 'D43', 'D39', 'G31', 'R25', 'J22', '116', 'G29', 'G22', 'F12', '602', 'R45', '617', '129', '103', 'D34', '226', '623', 'J27', 'M05', '902', 'B22', 'F32', 'G07', 'A24', 'R20', '136', 'G32', 'G05', '634', 'S04', 'A52', 'L15', 'A16', 'A33', 'D03', 'Q01', 'A09', 'Q04', 'L12', '209', '407', '406', 'D30', 'G28', 'R19', 'D40', 'A02', 'A18', 'B12', 'R04', '712', '639', 'F33', 'G14', '246', 'N10', '720', 'A21', 'B14', 'D06', '615', '237', 'F38', '408', 'F27', '119', '122', '710', 'G12', 'A30', 'D10', 'J28', 'R24', 'R31', 'A42', 'L29', 'R26', '630', 'G15', '410', '618', 'R01', '625', '607', 'F29', 'A28', 'R34', 'B15', '603', 'B19', 'G24', '624', 'G10', '901', '120', 'H08', 'M19', '133', '638', 'R28', 'D42', 'J20', '635', '212', '721', 'F21', 'H09', 'A54', 'M16', '247', '132', '211', 'M06', 'D21', 'G08', '106', 'R18', 'H03', 'B23', 'R03', '113', 'G18', 'D29', '220', '244', '249', 'F30', 'D17', 'M08', 'H07', 'J14', 'F22', 'F16', '239', '118', 'M21', 'A49', 'J21', '705', '233', 'F02', 'A14', '215', 'R41', '128', 'F35', '409', 'A41', '111', 'A11', 'M20', 'B13', 'R21', 'S01', 'R23', 'F04', 'D35', '719', 'J24', 'F03', 'F23', '234', 'J17', 'G36', 'R35', '205', 'B06', 'J31', 'L24', '225', '134', 'F01', 'L17', '414', 'N03', 'G30', 'L22', 'D11', 'D38', '130', 'A57', '114', 'A32', 'D16', 'D18', 'A45', '236', 'D41', '142', 'F24', 'A65', 'M13', '707', '711', 'M11', '208', 'A48', '125', 'A47', '108', 'D27', 'J30', 'D22', 'N07', 'B04', '242', 'G11', 'G35', 'A19', 'D33', '127', 'B08', 'H02', 'M23', 'F09', 'L19', '611', 'A64', '104', 'E01', '627', 'R40', 'D37', 'A40', '107', '217', '724', 'H15', '201', 'R39', '243', 'R17', 'L26', 'Q03', 'A05', '101', 'J15', '123', 'F36', 'D01', '504', 'A51', '612', '609', 'N06', '614', 'A44', 'R43', 'F34', '216', 'L02', 'F05', '138', '631', 'N02', '219', 'A07', 'R15', 'L03', 'F06', '709', '218', 'G19', '139', 'A38', 'H06', '256', '222', 'B16', '301', '613', 'H13', 'D19', 'D14', 'L20', '402', '401', 'R11', '505', '420', '302', 'R05', 'L11', 'A25', 'F14', '235', '228', '121', '109', 'G16', 'G13', 'S03', 'D05', 'A36', '251', '126', 'R27', '616', '419', '610', 'L13', '255', '214', '501', 'A34', '629', '413', 'M10', '640', 'A03', 'F39', 'M04', 'A43', 'M01', 'G33', '636', '632', 'F26', 'B10', 'N08', '210', 'F20', 'J16', 'G21', 'M14', 'R14', 'H14', '411', '713', 'A06', 'R44', '708', '601', 'M18', 'R08', '230', '241', 'J19', '232', 'F11', '135', 'G20', 'L21', 'B20', 'A20', '231', 'A60', '701', '718', 'L27', 'D12', 'R16', 'L10', 'H04', 'N09', 'M12', '621', '633', '418', 'L16', '213', '229', 'F25', 'L01', 'D24', '702', 'R30', '248', '606', 'F18', 'A22', '253', 'R29', '706', 'D08', 'H01', 'H10', '245', '502', '714', 'A53', '137', '405', 'A63', 'R22', '117', '112', 'L14', '238', '622', 'D28', 'A59', 'A61', 'D09', '723', '726', '716', 'H11', 'D31', 'B21', '415', '619', 'A15', 'R32', 'R33', 'G06', 'D04', '254', 'A12', 'J12', 'J29', 'R13', '637', '221', '423', 'G26', 'R06', 'M22', 'L25', 'L06', 'A46', 'R42', 'A17', '604', 'L08', 'J23', 'N04', 'G34', '412', '115', '204', 'M09', 'D26', '416', 'B17', '110', '252', 'N05', 'L05', '626', '628', '715', 'R36', 'H12', 'A10', '503', 'D15', '608', 'B18', 'A55', 'D25', 'F15', 'D07', '207', 'G09', '124', 'A27', 'L28', 'F07', '725', 'Q05', '206', '131', '250', '227', 'D32', '228', '121', '109', 'G16', 'G13', 'S03', 'D05', 'A36', '251', '126', 'R27', '616', '419', '610', 'L13', '255', '214', '501', 'A34', '629', '413', 'M10', '640', 'A03', 'F39', 'M04', 'A43', 'M01', 'G33', '636', '632', 'F26', 'B10', 'N08', '210', 'F20', 'J16', 'G21', 'M14', 'R14', 'H14', '411', '713', 'A06', 'R44', '708', '601', 'M18', 'R08', '230', '241', 'J19', '232', 'F11', '135', 'G20', 'L21', 'B20', 'A20', '231', 'A60', '701', '718', 'L27', 'D12', 'R16', 'L10', 'H04', 'N09', 'M12', '621', '633', '418', 'L16', '213', '229', 'F25', 'L01', 'D24', '702', 'R30', '248', '606', 'F18', 'A22', '253', 'R29', '706', 'D08', 'H01', 'H10', '245', '502', '714', 'A53', '137', '405', 'A63', 'R22', '117', '112', 'L14', '238', '622', 'D28', 'A59', 'A61', 'D09', '723', '726', '716', 'H11', 'D31', 'B21', '415', '619', 'A15', 'R32', 'R33', 'G06', 'D04', '254', 'A12', 'J12', 'J29', 'R13', '637', '221', '423', 'G26', 'R06', 'M22', 'L25', 'L06', 'A46', 'R42', 'A17', '604', 'L08', 'J23', 'N04', 'G34', '412', '115', '204', 'M09', 'D26', '416', 'B17', '110', '252', 'N05', 'L05', '626', '628', '715', 'R36', 'H12', 'A10', '503', 'D15', '608', 'B18', 'A55', 'D25', 'F15', 'D07', '207', 'G09', '124', 'A27', 'L28', 'F07', '725', 'Q05', '206', '131', '250', '227', 'D32', '228', '121', '109', 'G16', 'G13', 'S03', 'D05', 'A36', '251', '126', 'R27', '616', '419', '610', 'L13', '255', '214', '501', 'A34', '629', '413', 'M10', '640', 'A03', 'F39', 'M04', 'A43', 'M01', 'G33', '636', '632', 'F26', 'B10', 'N08', '210', 'F20', 'J16', 'G21', 'M14', 'R14', 'H14', '411', '713', 'A06', 'R44', '708', '601', 'M18', 'R08', '230', '241', 'J19', '232', 'F11', '135', 'G20', 'L21', 'B20', 'A20', '231', 'A60', '701', '718', 'L27', 'D12', 'R16', 'L10', 'H04', 'N09', 'M12', '621', '633', '418', 'L16', '213', '229', 'F25', 'L01', 'D24', '702', 'R30', '248', '606', 'F18', 'A22', '253', 'R29', '706', 'D08', 'H01', 'H10', '245', '502', '714', 'A53', '137', '405', 'A63', 'R22', '117', '112', 'L14', '238', '622', 'D28', 'A59', 'A61', 'D09', '723', '726', '716', 'H11', 'D31', 'B21', '415', '619', 'A15', 'R32', 'R33', 'G06', 'D04', '254', 'A12', 'J12', 'J29', 'R13', '637', '221', '423', 'G26', 'R06', 'M22', 'L25', 'L06', 'A46', 'R42', 'A17', '604', 'L08', 'J23', 'N04', 'G34', '412', '115', '204', 'M09', 'D26', '416', 'B17', '110', '252', 'N05', 'L05', '626', '628', '715', 'R36', 'H12', 'A10', '503', 'D15', '608', 'B18', 'A55', 'D25', 'F15', 'D07', '207', 'G09', '124', 'A27', 'L28', 'F07', '725', 'Q05', '206', '131', '250', '227', 'D32']"
from ast import literal_eval
t=time.perf_counter()
stset=literal_eval(longstr)
print(len(stset),time.perf_counter()-t)
print(len(set(stset)),time.perf_counter()-t)
t=time.perf_counter()
print(longstr.find("'sdfjghlsfdkjg'"),time.perf_counter()-t)

nnn=['4601828_19316','4601831_19316','4601830_19316','4601834_19316','4601840_19316','4601839_19316','4601842_19316','4601844_19316','4601843_19316','4601848_19316','4601847_19316','4601851_19316','4601852_19316','4601856_19316','4601857_19316','4601860_19316','4601861_19316','4601863_19316','4601862_19316','4601868_19316','4601870_19316','4601899_19316','4601895_19316','4601901_19316','4601892_19316','4601913_19316','4601914_19316','4601912_19316','4601915_19316','4601935_19316','4601931_19316','4601932_19316','4601927_19316','4601925_19316','4601971_19316','4601972_19316','4601984_19316','4601980_19316','4601973_19316','4601985_19316','4601976_19316','4601983_19316','4602013_19316','4602008_19316','4602018_19316','4602017_19316','4602021_19316','4602015_19316','4602010_19316','4602009_19316','4602020_19316','4602012_19316','4602007_19316','4602046_19316','4602052_19316','4602053_19316','4602047_19316','4602051_19316','4602058_19316','4602050_19316','4602075_19316','4602078_19316','4602081_19316','4602076_19316','4602083_19316','4602077_19316','4602100_19316','4602101_19316','4602112_19316','4602109_19316','4602113_19316','4602115_19316','4602127_19316','4602130_19316','4602133_19316','4602131_19316','4602143_19316','4602145_19316','4602147_19316','4602150_19316','4602149_19316','4602144_19316','4602175_19316','4602168_19316','4602183_19316','4602176_19316','4602174_19316','4602181_19316','4602171_19316','4602178_19316','4602177_19316','4602200_19316','4602202_19316','4602243_19316','4602246_19316','4602240_19316','4602238_19316','4601838_19316','4601845_19316','4601846_19316','4601850_19316','4601849_19316','4601855_19316','4601853_19316','4601854_19316','4601858_19316','4601859_19316','4601867_19316','4601864_19316','4601865_19316','4601866_19316','4601869_19316','4601905_19316','4601906_19316','4601903_19316','4601904_19316','4601907_19316','4601922_19316','4601919_19316','4601921_19316','4601920_19316','4601951_19316','4601957_19316','4601955_19316','4601953_19316','4601956_19316','4601993_19316','4601994_19316','4601991_19316','4601990_19316','4601997_19316','4602000_19316','4601998_19316','4602002_19316','4602037_19316','4602034_19316','4602039_19316','4602041_19316','4602033_19316','4602040_19316','4602028_19316','4602027_19316','4602026_19316','4602045_19316','4602044_19316','4602069_19316','4602063_19316','4602072_19316','4602064_19316','4602061_19316','4602065_19316','4602062_19316','4602091_19316','4602096_19316','4602094_19316','4602089_19316','4602087_19316','4602095_19316','4602104_19316','4602105_19316','4602118_19316','4602122_19316','4602120_19316','4602116_19316','4602134_19316','4602139_19316','4602135_19316','4602141_19316','4602158_19316','4602155_19316','4602156_19316','4602165_19316','4602159_19316','4602166_19316','4602187_19316','4602186_19316','4602196_19316','4602199_19316','4602192_19316','4602195_19316','4602188_19316','4602198_19316','4602220_19316','4602222_19316','4602225_19316','4602259_19316','4602260_19316','4602257_19316','4602252_19316','4602249_19316','4602250_19316','4602441_19316','4602442_19316','4602443_19316','4602445_19316','4602444_19316','4602422_19316','4602419_19316','4602272_19316','4602203_19316']
st=pd.read_csv('dc subway gtfs\stop_times.txt')
gfgfgf=st[(st['trip_id'].isin(nnn) & st['stop_id'].isin(['PF_A08_C','PF_A08_C']))].sort_values('arrival_time')
gfgfgf.to_csv('uhhh.csv')


# print(datetime.datetime.combine(datetime.date.today(),datetime.time.fromisoformat("25:00:00"))-datetime.date.today())